/*!
@file ProjectDraw.h
@brief 自作シェーダ用描画コンポネントの実装
*/
#pragma once
#include "stdafx.h"

namespace basecross
{
	class AreaDraw :public SmBaseDraw
	{
	public:
		//--------------------------------------------------------------------------------------
		/*!
		@brief  コンストラクタ
		@param[in]  GameObjectPtr   ゲームオブジェクト
		*/
		//--------------------------------------------------------------------------------------
		explicit AreaDraw(const shared_ptr<GameObject>& GameObjectPtr)
			:SmBaseDraw(GameObjectPtr) {};
		//--------------------------------------------------------------------------------------
		/*!
		@brief  デストラクタ
		*/
		//--------------------------------------------------------------------------------------
		virtual ~AreaDraw() {}
		//--------------------------------------------------------------------------------------
		/*!
		@brief  OnCreate処理
		@return なし
		*/
		//--------------------------------------------------------------------------------------
		virtual void OnCreate()override {}
		//--------------------------------------------------------------------------------------
		/*!
		@brief  OnUpdate処理（空関数）
		@return なし
		*/
		//--------------------------------------------------------------------------------------
		virtual void OnUpdate()override {}
		//--------------------------------------------------------------------------------------
		/*!
		@brief  OnDraw処理
		@return なし
		*/
		//--------------------------------------------------------------------------------------
		virtual void OnDraw()override;
		//--------------------------------------------------------------------------------------
		/*!
		@brief  テクスチャをセットする処理
		@return なし
		*/
		//--------------------------------------------------------------------------------------
		void SetTextures(UINT StartSlot, UINT NumTextuers, const wstring& Key);
		//--------------------------------------------------------------------------------------
		/*!
		@brief  シェーダーに渡す汎用パラメータの更新処理
		@return なし
		*/
		//--------------------------------------------------------------------------------------
		void UpdateParam(ParamCB& param);
		//--------------------------------------------------------------------------------------
	private:
		float time;
		unsigned int count;

	};

}